{
  "  Welcome to Codex, OpenAI's command-line coding agent": "  欢迎使用 Codex，OpenAI 的命令行编程助手",
  "  Sign in with ChatGPT to use Codex as part of your paid plan": "  登录 ChatGPT 以在付费套餐中使用 Codex",
  "  or connect an API key for usage-based billing": "  或者连接 API 密钥以按使用量计费",
  "> 1. Sign in with ChatGPT": "> 1. 使用 ChatGPT 登录",
  "     Usage included with Plus, Pro, and Team plans": "     Plus、Pro、Team 套餐内含使用额度",
  "  2. Provide your own API key": "  2. 提供你自己的 API 密钥",
  "     Pay for what you use": "     按使用量付费",
  "  Press Enter to continue": "  按 Enter 键继续",
  "  To get started, describe a task or try one of these commands:": "  开始使用时，可以描述要做的任务或尝试以下命令：",
  "/init - create an AGENTS.md file with instructions for Codex": "/init - 创建一个包含Codex指令的AGENTS.md文件",
  "/status - show current session configuration": "/status - 显示当前会话配置",
  "/approvals - choose what Codex can do without approval": "/approvals - 选择Codex可以在无需批准的情况下执行的操作",
  "/model - choose what model and reasoning effort to use": "/model - 选择要使用的模型和推理强度",
  "▌ Summarize recent commits": "▌ 总结最近的提交",
  "⏎ send   Ctrl+J newline   Ctrl+T transcript   Ctrl+C quit": "⏎ 发送   Ctrl+J 换行   Ctrl+T 记录   Ctrl+C 退出",
  
  "Codex CLI": "Codex 命令行工具",
  "If no subcommand is specified, options will be forwarded to the interactive CLI.": "如果未指定子命令，选项将转发给交互式CLI。",
  "Usage: codex [OPTIONS] [PROMPT]": "用法：codex [选项] [提示]",
  "Commands:": "命令：",
  "Arguments:": "参数：",
  "Options:": "选项：",
  
  "Run Codex non-interactively [aliases: e]": "非交互式运行Codex [别名: e]",
  "Run Codex non-interactively": "非交互式运行Codex",
  "Manage login": "管理登录",
  "Remove stored authentication credentials": "删除存储的身份验证凭据",
  "[experimental] Run Codex as an MCP server and manage MCP servers": "[实验性] 将Codex作为MCP服务器运行并管理MCP服务器",
  "Run the Protocol stream via stdin/stdout [aliases: p]": "通过stdin/stdout运行协议流 [别名: p]",
  "Run the Protocol stream via stdin/stdout": "通过stdin/stdout运行协议流",
  "Generate shell completion scripts": "生成shell自动补全脚本",
  "Internal debugging commands": "内部调试命令",
  "Apply the latest diff produced by Codex agent as a `git apply` to your local working": "将Codex代理生成的最新差异作为`git apply`应用到本地工作",
  "tree [aliases: a]": "目录 [别名: a]",
  "Resume a previous interactive session (picker by default; use --last to continue the": "恢复之前的交互式会话（默认使用选择器；使用--last继续",
  "most recent)": "最近的会话）",
  "Print this message or the help of the given subcommand(s)": "打印此消息或给定子命令的帮助",
  
  "Optional user prompt to start the session": "启动会话的可选用户提示",
  
  "Override a configuration value that would otherwise be loaded from `~/.codex/config.toml`.": "覆盖原本从`~/.codex/config.toml`加载的配置值。",
  "Use a dotted path (`foo.bar.baz`) to override nested values. The `value` portion is parsed": "使用点分路径（`foo.bar.baz`）覆盖嵌套值。`value`部分被解析",
  "as JSON. If it fails to parse as JSON, the raw string is used as a literal.": "为JSON。如果解析JSON失败，则将原始字符串用作字面值。",
  
  "Examples: - `-c model=\"o3\"` - `-c 'sandbox_permissions=[\"disk-full-read-access\"]'` - `-c": "示例：- `-c model=\"o3\"` - `-c 'sandbox_permissions=[\"disk-full-read-access\"]'` - `-c",
  "shell_environment_policy.inherit=all`": "shell_environment_policy.inherit=all`",
  
  "Optional image(s) to attach to the initial prompt": "附加到初始提示的可选图像",
  "Model the agent should use": "代理应使用的模型",
  "Convenience flag to select the local open source model provider. Equivalent to -c": "选择本地开源模型提供商的便利标志。等价于-c",
  "model_provider=oss; verifies a local Ollama server is running": "model_provider=oss；验证本地Ollama服务器是否正在运行",
  "Configuration profile from config.toml to specify default options": "来自config.toml的配置文件，用于指定默认选项",
  "Select the sandbox policy to use when executing model-generated shell commands": "选择执行模型生成的shell命令时使用的沙盒策略",
  "Configure when the model requires human approval before executing a command": "配置模型在执行命令前何时需要人工批准",
  
  "possible values:": "可能的值：",
  "read-only": "只读",
  "workspace-write": "工作区写入",
  "danger-full-access": "危险-完全访问",
  
  "Only run \"trusted\" commands (e.g. ls, cat, sed) without asking for user": "仅运行\"受信任\"的命令（如 ls、cat、sed）而不询问用户",
  "approval. Will escalate to the user if the model proposes a command that is not in the": "批准。如果模型提出不在",
  "\"trusted\" set": "\"受信任\"集合中的命令，将升级给用户",
  "Run all commands without asking for user approval. Only asks for approval if": "运行所有命令而不询问用户批准。仅在以下情况下询问批准：",
  "a command fails to execute, in which case it will escalate to the user to ask for": "命令执行失败，在这种情况下将升级给用户询问",
  "un-sandboxed execution": "非沙盒执行",
  "The model decides when to ask the user for approval": "模型决定何时询问用户批准",
  "Never ask for user approval Execution failures are immediately returned to": "从不询问用户批准，执行失败立即返回给",
  "the model": "模型",
  
  "Convenience alias for low-friction sandboxed automatic execution (-a on-failure, --sandbox": "低摩擦沙盒自动执行的便利别名（-a on-failure，--sandbox",
  "workspace-write)": "workspace-write）",
  
  "Skip all confirmation prompts and execute commands without sandboxing. EXTREMELY": "跳过所有确认提示并在没有沙盒的情况下执行命令。极其",
  "DANGEROUS. Intended solely for running in environments that are externally sandboxed": "危险。仅适用于在外部沙盒环境中运行",
  
  "Tell the agent to use the specified directory as its working root": "告诉代理使用指定目录作为其工作根目录",
  "Enable web search (off by default). When enabled, the native Responses `web_search` tool": "启用网络搜索（默认关闭）。启用时，原生响应`web_search`工具",
  "is available to the model (no per‑call approval)": "对模型可用（无需每次调用批准）",
  
  "Print help (see a summary with '-h')": "打印帮助（使用'-h'查看摘要）",
  "Print version": "打印版本",
  
  "Possible values:": "可能的值：",
  "- untrusted:  Only run \"trusted\" commands (e.g. ls, cat, sed) without asking for user": "- untrusted：仅运行\"受信任\"的命令（如ls、cat、sed）而不询问用户",
  "approval. Will escalate to the user if the model proposes a command that is not in the": "批准。如果模型提出不在",
  "\"trusted\" set": "\"受信任\"集合中的命令，将升级给用户",
  "- on-failure: Run all commands without asking for user approval. Only asks for approval if": "- on-failure：运行所有命令而不询问用户批准。仅在以下情况下询问批准：",
  "a command fails to execute, in which case it will escalate to the user to ask for": "命令执行失败，在这种情况下将升级给用户询问",
  "un-sandboxed execution": "非沙盒执行",
  "- on-request: The model decides when to ask the user for approval": "- on-request：模型决定何时询问用户批准",
  "- never:      Never ask for user approval Execution failures are immediately returned to": "- never：从不询问用户批准，执行失败立即返回给",
  "the model": "模型",
  
  "Error": "错误",
  "Warning": "警告",
  "Info": "信息",
  "Debug": "调试",
  "Success": "成功",
  "Failed": "失败",
  "Loading": "加载中",
  "Connecting": "连接中",
  "Connected": "已连接",
  "Disconnected": "已断开连接",
  "Timeout": "超时",
  "Retry": "重试",
  "Cancel": "取消",
  "Continue": "继续",
  "Yes": "是",
  "No": "否",
  "OK": "确定",
  "Done": "完成",
  
  "exec        Run Codex non-interactively [aliases: e]": "exec        非交互式运行Codex [别名: e]",
  "login       Manage login": "login       管理登录",
  "logout      Remove stored authentication credentials": "logout      删除存储的身份验证凭据",
  "mcp         [experimental] Run Codex as an MCP server and manage MCP servers": "mcp         [实验性] 将Codex作为MCP服务器运行并管理MCP服务器",
  "proto       Run the Protocol stream via stdin/stdout [aliases: p]": "proto       通过stdin/stdout运行协议流 [别名: p]",
  "completion  Generate shell completion scripts": "completion  生成shell自动补全脚本",
  "debug       Internal debugging commands": "debug       内部调试命令",
  "apply       Apply the latest diff produced by Codex agent as a `git apply` to your local working": "apply       将Codex代理生成的最新差异作为`git apply`应用到本地工作",
  "              tree [aliases: a]": "              目录 [别名: a]",
  "resume      Resume a previous interactive session (picker by default; use --last to continue the": "resume      恢复之前的交互式会话（默认使用选择器；使用--last继续",
  "              most recent)": "              最近的会话）",
  "help        Print this message or the help of the given subcommand(s)": "help        打印此消息或给定子命令的帮助",
  
  "          Optional user prompt to start the session": "          启动会话的可选用户提示",
  
  "          Override a configuration value that would otherwise be loaded from `~/.codex/config.toml`.": "          覆盖原本从`~/.codex/config.toml`加载的配置值。",
  "          Use a dotted path (`foo.bar.baz`) to override nested values. The `value` portion is parsed": "          使用点分路径（`foo.bar.baz`）覆盖嵌套值。`value`部分被解析",
  "          as JSON. If it fails to parse as JSON, the raw string is used as a literal.": "          为JSON。如果解析JSON失败，则将原始字符串用作字面值。",
  
  "          Examples: - `-c model=\"o3\"` - `-c 'sandbox_permissions=[\"disk-full-read-access\"]'` - `-c": "          示例：- `-c model=\"o3\"` - `-c 'sandbox_permissions=[\"disk-full-read-access\"]'` - `-c",
  "          shell_environment_policy.inherit=all`": "          shell_environment_policy.inherit=all`",
  
  "          Optional image(s) to attach to the initial prompt": "          附加到初始提示的可选图像",
  "          Model the agent should use": "          代理应使用的模型",
  "          Convenience flag to select the local open source model provider. Equivalent to -c": "          选择本地开源模型提供商的便利标志。等价于-c",
  "          model_provider=oss; verifies a local Ollama server is running": "          model_provider=oss；验证本地Ollama服务器是否正在运行",
  "          Configuration profile from config.toml to specify default options": "          来自config.toml的配置文件，用于指定默认选项",
  "          Select the sandbox policy to use when executing model-generated shell commands": "          选择执行模型生成的shell命令时使用的沙盒策略",
  "          Configure when the model requires human approval before executing a command": "          配置模型在执行命令前何时需要人工批准",
  
  "          [possible values: read-only, workspace-write, danger-full-access]": "          [可能的值: read-only, workspace-write, danger-full-access]",
  
  "          Possible values:": "          可能的值：",
  "          - untrusted:  Only run \"trusted\" commands (e.g. ls, cat, sed) without asking for user": "          - untrusted：仅运行\"受信任\"的命令（如ls、cat、sed）而不询问用户",
  "            approval. Will escalate to the user if the model proposes a command that is not in the": "            批准。如果模型提出不在",
  "            \"trusted\" set": "            \"受信任\"集合中的命令，将升级给用户",
  "          - on-failure: Run all commands without asking for user approval. Only asks for approval if": "          - on-failure：运行所有命令而不询问用户批准。仅在以下情况下询问批准：",
  "            a command fails to execute, in which case it will escalate to the user to ask for": "            命令执行失败，在这种情况下将升级给用户询问",
  "            un-sandboxed execution": "            非沙盒执行",
  "          - on-request: The model decides when to ask the user for approval": "          - on-request：模型决定何时询问用户批准",
  "          - never:      Never ask for user approval Execution failures are immediately returned to": "          - never：从不询问用户批准，执行失败立即返回给",
  "            the model": "            模型",
  
  "          Convenience alias for low-friction sandboxed automatic execution (-a on-failure, --sandbox": "          低摩擦沙盒自动执行的便利别名（-a on-failure，--sandbox",
  "          workspace-write)": "          workspace-write）",
  
  "          Skip all confirmation prompts and execute commands without sandboxing. EXTREMELY": "          跳过所有确认提示并在没有沙盒的情况下执行命令。极其",
  "          DANGEROUS. Intended solely for running in environments that are externally sandboxed": "          危险。仅适用于在外部沙盒环境中运行",
  
  "          Tell the agent to use the specified directory as its working root": "          告诉代理使用指定目录作为其工作根目录",
  "          Enable web search (off by default). When enabled, the native Responses `web_search` tool": "          启用网络搜索（默认关闭）。启用时，原生响应`web_search`工具",
  "          is available to the model (no per‑call approval)": "          对模型可用（无需每次调用批准）",
  
  "          Print help (see a summary with '-h')": "          打印帮助（使用'-h'查看摘要）",
  "          Print version": "          打印版本"
}
